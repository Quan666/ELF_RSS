# 配置 NoneBot 监听的 IP/主机名
HOST=0.0.0.0
# 配置 NoneBot 监听的端口
PORT=8080
# 开启 debug 模式 **请勿在生产环境开启**
DEBUG=false
# 配置 NoneBot 超级用户：管理员qq，支持多管理员，逗号分隔 注意，启动消息只发送给第一个管理员
SUPERUSERS=["123123123"]
# 配置 NoneBot 频道超级用户：管理员频道号，注意非qq号，可发送@后在gocq控制台获取
#GUILD_SUPERUSERS=["144115218677832239"]
# 配置机器人的昵称
NICKNAME=["elf","ELF"]
# 配置命令起始字符
COMMAND_START=["","/"]
# 配置命令分割字符
COMMAND_SEP=["."]

# 代理地址
#RSS_PROXY="127.0.0.1:7890"
# rsshub订阅地址
RSSHUB="https://rsshub.app"
# 备用 rsshub 地址 示例： ["https://rsshub.app","https://rsshub.app"] 务必使用双引号！！！
RSSHUB_BACKUP=[]
# 去重数据库的记录清理限定天数
DB_CACHE_EXPIRE=30
# 缓存rss条数
LIMIT=200
# 正文长度限制，防止消息太长刷屏，以及消息过长发送失败的情况
MAX_LENGTH=1024
# 是否启用启动时的提示消息推送
ENABLE_BOOT_MESSAGE=true

# 图片压缩
# 非 GIF 图片压缩后的最大长宽值，单位 px
ZIP_SIZE=2048
# GIF 图片压缩临界值，单位 KB
GIF_ZIP_SIZE=6144
# 保存图片的文件名,可使用 {subs}:订阅名 {name}:文件名 {ext}:文件后缀(可省略)
IMG_FORMAT="{subs}/{name}{ext}"
# 图片的下载路径,默认为./data/image 可以为相对路径(./test)或绝对路径(/home)
IMG_DOWN_PATH=""

# 是否显示转发的内容(主要是微博)，默认打开，如果关闭还有转发的信息的话，可以自行添加进屏蔽词(但是这整条消息就会没)
BLOCKQUOTE=true
# 屏蔽词填写 支持正则，如 ["互动抽奖","微博抽奖平台"] 务必使用双引号！！！
BLACK_WORD=[]

# 使用百度翻译API 可选，填的话两个都要填，不填默认使用谷歌翻译(需墙外？)
# 百度翻译接口appid和secretKey，前往http://api.fanyi.baidu.com/获取
# 一般来说申请标准版免费就够了，想要好一点可以认证上高级版，有月限额，rss用也足够了
BAIDU_ID=""
BAIDU_KEY=""
# DEEPL 翻译API 可选，不填默认使用谷歌翻译(需墙外？)
DEEPL_TRANSLATOR_API_KEY=""
# 配合 deepl_translator 使用的语言检测接口，前往 https://detectlanguage.com/documentation 注册获取 api_key
SINGLE_DETECTION_API_KEY=""

# qbittorrent 相关设置(文件下载位置等更多设置请在qbittorrent软件中设置)
# qbittorrent 用户名
QB_USERNAME=""
# qbittorrent 密码
QB_PASSWORD=""
# qbittorrent 客户端默认是关闭状态，请打开并设置端口号为 8081，同时勾选 “对本地主机上的客户端跳过身份验证”
#QB_WEB_URL="http://127.0.0.1:8081"
# qb的文件下载地址，这个地址必须是 go-cqhttp能访问到的
QB_DOWN_PATH=""
# 下载进度消息提示群组 示例 [12345678] 注意：最好是将该群设置为免打扰
DOWN_STATUS_MSG_GROUP=[]
# 下载进度检查及提示间隔时间，单位秒，不建议小于 10
DOWN_STATUS_MSG_DATE=10

# pikpak 相关设置
# pikpak 用户名
PIKPAK_USERNAME=""
# pikpak 密码
PIKPAK_PASSWORD=""
# pikpak 离线保存的目录, 默认是根目录，示例: ELF_RSS/Downloads ,目录不存在会自动创建, 不能/结尾
PIKPAK_DOWNLOAD_PATH=""

# Telegram 相关设置
# Telegram 管理员 ID 列表，用于接收离线通知和管理机器人
TELEGRAM_ADMIN_IDS=[]
# Telegram 机器人的 token
TELEGRAM_BOT_TOKEN=""

# MYELF博客地址 https://myelf.club
# 出现问题请在 GitHub 上提 issues
# 项目地址 https://github.com/Quan666/ELF_RSS